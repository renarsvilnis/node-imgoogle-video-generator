{"version":3,"sources":["../es6/scraper.js"],"names":[],"mappings":";;;;;;;;mBAAgB,KAAK;;;;uBAED,SAAS;;;;uBACT,SAAS;;;;qBACX,OAAO;;;;yBAED,aAAa;;AAE9B,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAY,EAAE,EAAE;AACxC,SAAO,iBAAI,OAAO,uBAAY,EAAE,GAAG,EAAE,CAAC,CAAC;CACxC,CAAC;;;AAEK,IAAM,WAAW,GAAG,SAAd,WAAW,CAAY,GAAG,EAAE;AACvC,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,8BAAQ,GAAG,EAAE;AACX,aAAO,EAAE,KAAK;KACf,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC1B,UAAG,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;AACjC,eAAO,CAAC,IAAI,CAAC,CAAC;OACf,MAAM;;AAEL,cAAM,EAAE,CAAC;OACV;KACF,CAAC,CAAA;GACH,CAAC,CAAC;CACJ,CAAC;;;AAEK,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAY,IAAI,EAAE;AACjD,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,QAAI,CAAC,GAAG,qBAAQ,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE3B,QAAI,OAAO,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;AACpC,QAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,WAAO,CAAC,IAAI,CAAC,YAAW;AACtB,UAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,YAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB,CAAC,CAAC;;AAEH,WAAO,CAAC,MAAM,CAAC,CAAC;GACjB,CAAC,CAAC;CACJ,CAAC;;;AAEK,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAY,MAAM,EAAE;AAC7C,MAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AAC/B,QAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;AAEpC,YAAM,CAAC,mBAAmB,CAAC,CAAC;KAC7B,MAAM;;AAEL,yBAAM,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,UAAS,GAAG,EAAE,KAAK,EAAE;AACzD,YAAG,GAAG,EAAE;AACN,gBAAM,CAAC,GAAG,CAAC,CAAC;SACb,MAAM;AACL,iBAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACrB;OACF,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;CACJ,CAAC;;;AAEK,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAY,KAAK,EAAE;AAC3C,SAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,WAAO,CAAC,KAAK,CAAC,CAAC;GAChB,CAAC,CAAC;CACJ,CAAC","file":"scraper.js","sourcesContent":["import url from 'url';\n\nimport cheerio from 'cheerio';\nimport request from 'request';\nimport async from 'async';\n\nimport {IMAGE_URL} from './constants';\n\nexport const createPageUrl = function(id) {\n  return url.resolve(IMAGE_URL, \"\" + id);\n};\n\nexport const getPageHtml = function(url) {\n  return new Promise((resolve, reject) => {\n    request(url, {\n      timeout: 10000\n    }, function(err, res, html) {\n      if(!err && res.statusCode === 200) {\n        resolve(html);\n      } else {\n        // TODO: error\n        reject();\n      }\n    })\n  });\n};\n\nexport const getImageListFromHtml = function(html) {\n  return new Promise((resolve, reject) => {\n    let $ = cheerio.load(html);\n\n    let $images = $('.post .photo img');\n    let images = [];\n\n    $images.each(function() {\n      let src = $(this).attr('src');\n      images.push(src);\n    });\n\n    resolve(images);\n  });\n};\n\nexport const downloadImages = function(images) {\n  new Promise((resolve, reject) => {\n    if(!images || !Array.isArray(images)) {\n      // TODO: error\n      reject('Invalid parameter');\n    } else {\n      // TODO: use each to get index\n      async.parallel(images, downloadImage, function(err, files) {\n        if(err) {\n          reject(err);\n        } else {\n          resolve(err, files);\n        }\n      });\n    }\n  });\n};\n\nexport const downloadImage = function(image) {\n  console.log(image);\n  return new Promise((resolve, reject) => {\n    resolve(image);\n  });\n};\n\n"]}